{
    "jpsType": "install",
    "homepage": "https://github.com/jelastic-jps/magento/tree/master/magento2-php7-varnish-mysql-redis-memcache-storage",
    "description": {
        "text": "Auto-scalable and highly-available Magento eCommerce cluster with out-of-box auto-scaling, even load and traffic distribution, master-slave data replication, page caching and user session storage, run in Docker containers.",
        "short": "Auto-scalable and highly-available Magento cluster with load balancing, data replication, content caching and user session storage."
    },
    "categories": [
        "apps/clusters"
    ],
    "logo": "https://raw.githubusercontent.com/jelastic-jps/magento-cluster/master/images/magento_70x70.png",
    "name": "Auto-Scalable Magento EE Cluster",
    "globals": {
        "PATH": "https://raw.githubusercontent.com/sych74/magentoEE/master",
        "MAGE_ROOT": "/var/www/webroot/ROOT",
        "DB_USER": "jelastic-${fn.random}",
        "DB_PASS": "${fn.password(20)}",
        "DB_NAME": "magento",
        "ADMIN_PASSWD": "${fn.password(10)}"
    },
    "success": "Below you will find your admin panel URL, username and password.</br></br> <table style='font-size:13px; border: none;'><tr><td>Admin panel URL:</td><td style='padding-left: 10px;'><a href='${env.protocol}://${env.domain}/admin/' target='_blank'>${env.protocol}://${env.domain}/admin/</a></td></tr>  <tr><td>Admin name:</td><td style='padding-left: 10px;'>admin</td></tr><tr><td>Password:</td><td style='padding-left: 10px;'>${globals.ADMIN_PASSWD}</td></tr></table></br>To add a custom domain name for your Magento Cluster installation, follow the steps described in our <a href='http://docs.jelastic.com/custom-domains' target='_blank'>documentation</a>",
    "nodes": [{
        "image": "jelastic/nginxphp:1.10.1-php-7.0.21",
        "count": 2,
        "cloudlets": 8,
        "nodeGroup": "cp",
        "links": ["rdc:RDC", "rds:RDS"],
        "volumes": ["/var/www/webroot/ROOT", "/mnt"],
        "volumeMounts": {
            "/mnt": {
                "readOnly": false,
                "sourceNodeGroup": "cp"
            },
            "/var/www/webroot/ROOT": {
                "readOnly": false,
                "sourcePath": "/data",
                "sourceNodeGroup": "storage"
            }
        }
    }, {
        "image": "jelastic/storage",
        "cloudlets": 8,
        "nodeGroup": "storage",
        "displayName": "Storage"
    }, {
        "image": "jelastic/mysql:5.7-latest",
        "count": 2,
        "cloudlets": 8,
        "nodeGroup": "sqldb"
    }, {
        "image": "jelastic/varnish:4.1.8",
        "cloudlets": 8,
        "count": 1,
        "nodeGroup": "bl",
        "volumes": ["/mnt"],
        "volumeMounts": {
            "/mnt": {
                "readOnly": false,
                "sourceNodeGroup": "bl"
            }
        }
    }, {
        "image": "devbeta/redis:3.2.9",
        "cloudlets": 8,
        "nodeGroup": "rdc",
        "displayName": "Cache"
    }, {
        "image": "devbeta/redis:3.2.9",
        "cloudlets": 8,
        "nodeGroup": "rds",
        "displayName": "Session"
    }],
    "onAfterScaleOut[nodeGroup:cp]": {
        "forEach(event.response.nodes)": {
            "setupCPNode": {
                "filter": "${@i.id}",
                "intIP": "${@i.intIP}"
            },
            "setEnvs": {
                "filter": "${@i.id}"
            }
        }
    },
    "onAfterScaleOut[nodeGroup:bl]": {
        "forEach(event.response.nodes)": {
            "setupBLNode": {
                "filter": "${@i.id}"
            }
        }
    },
    "onBeforeScaleIn[nodeGroup:cp]": {
        "forEach(event.response.nodes)": {
            "removeCPNode": {
                "intIP": "${@i.intIP}"
            }
        }
    },
    "onInstall": [{
        "log": "Artefacts downloading"
    }, {
        "cmd[${nodes.bl.first.id}]": [
            "wget ${globals.PATH}/scripts/varnish/jem_overrides/varnish_balancer.lib -O /mnt/varnish_balancer.lib",
            "wget ${globals.PATH}/configs/varnish/default.vcl -O /mnt/default.vcl"
        ]
    }, {
        "cmd[${nodes.cp.first.id}]": [
            "wget ${globals.PATH}/configs/nginx/nginx.conf -O /mnt/nginx.conf",
            "wget ${globals.PATH}/configs/nginx/default.conf -O /mnt/default.conf",
            "wget ${globals.PATH}/configs/php/extensions.ini -O /mnt/extensions.ini"
        ]
    }, {
        "log": "DB Cluster Setup"
    }, {
        "installJps": {
            "jps": "https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/custom-conf/scripts/cluster-configuration.jps",
            "settings": {
                "db_user": "${globals.DB_USER}",
                "db_pass": "${globals.DB_PASS}",
                "custom_conf": "${globals.PATH}/configs/mysql/db.cnf"
            }
        }
    }, {
        "forEach(nodes.bl)": {
            "setupBLNode": {
                "filter": "${@i.id}"
            }
        }
    }, {
        "forEach(nodes.cp)": {
            "setupCPNode": {
                "filter": "${@i.id}",
                "intIP": "${@i.intIP}"
            },
            "setEnvs": {
                "filter": "${@i.id}"
            }
        }
    }, {
        "setEnvs": {
            "filter": "storage"
        }
    }, {
        "cmd[session]": "chkconfig memcached on && service memcached restart"
    }, {
        "log": "Downloading, Unpacking, Installation and Patching Magento"
    }],
    "actions": {
        "setEnvs": {
            "forEach(nodes.sqldb)": {
                "if (${@i.ismaster})": {
                    "cmd [${this.filter}]": "echo ${@i.intIP} DB_MASTER >> /etc/hosts"
                },
                "if (!${@i.ismaster})": {
                    "cmd [${this.filter}]": "echo ${@i.intIP} DB_SLAVE >> /etc/hosts"
                }
            }
        },
        "setupCPNode": [{
            "cmd[${this.filter}]": [
                "mkdir -p /etc/nginx/sites-enabled && cp /mnt/nginx.conf /etc/nginx/nginx.conf && cp /mnt/default.conf /etc/nginx/sites-enabled/default.conf",
                "cp /mnt/extensions.ini /etc/php.d/extensions.ini",
                "service nginx restart"
            ]
        }, {
            "setNodeDisplayName[${this.filter}]": "AppServer"
        }, {
            "cmd[bl]": [
                "jem balancer addCommonHost -h ${this.intIP} ",
                "grep -q \".url = \"/\"\" /etc/varnish/default.vcl ||  sed -ri 's| .url = \"/\"|.url = \"/varnish-probe.php\"|g' /etc/varnish/default.vcl",
                "service varnish reload"
            ]
        }],
        "removeCPNode": {
            "cmd[bl]": "jem balancer RemoveCommonHost -h ${this.intIP} && service varnish reload"
        },
        "setupBLNode": [{
            "cmd[${this.filter}]": "cp /mnt/varnish_balancer.lib /var/lib/jelastic/overrides/varnish_balancer.lib && cp /mnt/default.vcl /etc/varnish/default.vcl"
        }, {
            "forEach(nodes.cp)": {
                "cmd[${this.filter}]": [
                    "jem balancer addCommonHost -h ${@i.intIP} ",
                    "grep -q \".url = \"/\"\" /etc/varnish/default.vcl ||  sed -ri 's| .url = \"/\"|.url = \"/varnish-probe.php\"|g' /etc/varnish/default.vcl",
                    "service varnish reload"
                ]
            }
        }, {
            "setNodeDisplayName[${this.filter}]": "Balancer"
        }]
    }
}
